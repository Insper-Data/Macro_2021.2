theme_bw()
rm(list=ls())
setwd("~/Insper/Data/Projeto Macro/Data_Macro_ESG/Macro_2021.2")
data <- read.csv("test.csv")
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AM" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(0, 1.5)
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(0, 1.5) +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(1, 1.5) +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(-1, -1.5) +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(-1, -2) +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(ESGI)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(-2, -1) +
theme_bw()
teste
rm(list=ls())
setwd("~/Insper/Data/Projeto Macro/Data_Macro_ESG/Macro_2021.2")
data <- read.csv("test.csv")
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Environmental)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(-2, -1) +
theme_bw()
library(tidyverse)
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Environmental)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
ylim(-2, -1) +
theme_bw()
teste
teste
View(data)
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Environmental)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Governance)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Social)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Social)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Governance)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Environmental)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Access.to.electricity....of.population.)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Access.to.electricity....of.population.)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Access.to.electricity....of.population.)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Control.of.Corruption..Estimate)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
library(readxl)
data2 <- read_excel("/Bases/ESG_database.xlsx")
data2 <- read_excel("Bases/ESG_database.xlsx")
View(data2)
library(readxl)
data2 <- read_excel("Bases/ESG_database.xlsx")
teste2 <- data2 %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(Control.of.Corruption..Estimate)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste2 <- data2 %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(`Control of Corruption: Estimate`)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
data2 <- read_excel("Bases/ESG_database (Copy).xlsx")
data2 <- read_excel("Bases/ESG_database - Copy.xlsx")
teste2 <- data2 %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(`Control of Corruption: Estimate`)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste2
par(mfrow = c(1,2))
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Control.of.Corruption..Estimate)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
par(mfrow = c(1,2))
teste
teste2
par(mfrow = c(1,2))
teste
teste2
teste
teste2
teste
teste2
teste2 <- data2 %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(`Access to electricity (% of population)`)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste <- data %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(-Access.to.electricity....of.population.)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
library(readxl)
teste2 <- data2 %>%
rename(Development = develop) %>%
group_by(Development, Time) %>%
summarise(ESG = mean(`Access to electricity (% of population)`)) %>%
ggplot(aes(x = Time, y = ESG, color=Development )) +
scale_color_manual(values = c("EM" = "red4", "AV" = "navyblue"))+
geom_point() +
geom_line()+
labs(x = "Year", y = "ESG", title = "", subtitle = "") +
theme_bw()
teste
teste2
teste2
teste
teste2
setwd("~/Insper/Data/Projeto Macro/Data_Macro_ESG/Macro_2021.2")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
# Extraindo e arrumando os dados
data <- read_excel("Bases/ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
## Ajustando escala dos dados
## Inverter o sinal para interpretabilidade
panel_data <- scale(-panel_data, center = TRUE, scale = TRUE)
pca <- prcomp(panel_data)
## Scree plot
scree_plot <- fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("Proporção Explicada da Variância")
View(scree_plot)
View(scree_plot[["data"]])
View(pca)
get_eigenvalue(pca)
View(get_eigenvalue(pca))
kaiser_criteria <- get_eigenvalue(pca)
length(kaiser_criteria)
nrow(kaiser_criteria)
View(kaiser_criteria)
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
setwd("~/Insper/Data/Projeto Macro/Data_Macro_ESG/Macro_2021.2")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
data <- read_excel("Bases/ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
panel_data <- scale(-panel_data, center = TRUE, scale = TRUE)
pca <- prcomp(panel_data)
scree_plot <- fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("Proporção Explicada da Variância")
kaiser_criteria <- get_eigenvalue(pca) # Apenas se eigenvalue > 1
View(kaiser_criteria)
Phi <- pca$rotation
pc1 <- pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pc2 <- pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pc3 <- pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
threshold <- 100 / ncol(panel_data)
colunas <- nrow(pc1[["data"]])
t = 1
pesos1 <- vector()
nomes1 <- vector()
for (i in 1:colunas) {
if (pc1[["data"]][[i,2]] >= threshold) {
pesos1[t] <- Phi[rownames(pc1[["data"]])[[i]], 1]
nomes1[t] <- rownames(pc1[["data"]])[[i]]
t = t + 1
}
}
t = 1
pesos2 <- vector()
nomes2 <- vector()
for (i in 1:colunas) {
if (pc2[["data"]][[i,2]] >= threshold) {
pesos2[t] <-Phi[rownames(pc1[["data"]])[[i]], 2]
nomes2[t] <- rownames(pc2[["data"]])[[i]]
t = t + 1
}
}
t = 1
pesos3 <- vector()
nomes3 <- vector()
for (i in 1:colunas) {
if (pc3[["data"]][[i,2]] >= threshold) {
pesos3[t] <- Phi[rownames(pc1[["data"]])[[i]], 3]
nomes3[t] <- rownames(pc3[["data"]])[[i]]
t = t + 1
}
}
linhas <- nrow(panel_data)
m <- length(nomes1)
scree_plot[["data"]][["eig"]]
m <- length(nomes1)
gov_ <- vector()
gov <- vector()
for (j in 1:linhas) {
for (k in 1:m) {
for (i in 1:colunas) {
if (nomes1[k] == colnames(panel_data)[i]) {
gov_[k] <- (pesos1[k]) * panel_data[j, i]
}
}
}
gov[j] <- sum(gov_)
}
m <- length(nomes2)
soc_ <- vector()
soc <- vector()
for (j in 1:linhas) {
for (k in 1:m) {
for (i in 1:colunas) {
if (nomes2[k] == colnames(panel_data)[i]) {
soc_[k] <- (pesos2[k]) * panel_data[j, i]
}
}
}
soc[j] <- sum(soc_)
}
m <- length(nomes3)
env_ <- vector()
env <- vector()
for (j in 1:linhas) {
for (k in 1:m) {
for (i in 1:colunas) {
if (nomes3[k] == colnames(panel_data)[i]) {
env_[k] <- (pesos3[k]) * panel_data[j, i]
}
}
}
env[j] <- sum(env_)
}
E_S_G <- panel_data
E_S_G <- cbind(E_S_G, Governance = -gov) # Invertendo o sinal
E_S_G <- cbind(E_S_G, Social = soc)
E_S_G <- cbind(E_S_G, Environmental = env)
variance <- c(scree_plot[["data"]][[1,2]],
scree_plot[["data"]][[2,2]],
scree_plot[["data"]][[3,2]])
total <- sum(variance)
proportion <- c(scree_plot[["data"]][[1,2]]/total,
scree_plot[["data"]][[2,2]]/total,
scree_plot[["data"]][[3,2]]/total)
variance_exp <- data.frame(proportion)
ESGI <- vector()
for (i in 1:linhas) {
ESGI[i] <- E_S_G[i,16] * variance_exp[1,1] +
E_S_G[i,17] * variance_exp[2,1] +
E_S_G[i,18] * variance_exp[3,1]
}
ESG <- E_S_G
ESGI <- vector()
for (i in 1:linhas) {
ESGI[i] <- E_S_G[i,15] * variance_exp[1,1] +
E_S_G[i,16] * variance_exp[2,1] +
E_S_G[i,17] * variance_exp[3,1]
}
ESG <- E_S_G
ESG <- cbind(ESG, ESGI = ESGI)
View(ESG)
