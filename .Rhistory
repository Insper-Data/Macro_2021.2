geom_line(aes(x = ano, y = -driver_1, color = paises))
ggplot(data = tb) +
geom_line(aes(x = ano, y = -driver_1, color = paises, group = 1))
ggplot(data = tb) +
geom_line(aes(x = ano, y = -driver_1, color = paises, group = 10))
ggplot(data = tb) +
geom_line(aes(x = ano, y = -driver_1, color = paises, group = ))
ggplot(data = tb) +
geom_line(aes(x = ano, y = -driver_1, color = paises, group = 1))
ggplot(data = tb) +
geom_line(aes(x = paises, y = -driver_1, color = ano, group = 1))
ggplot(data = tb) +
geom_line(aes(x = ano, y = -driver_1, color = paises, group = 1))
View(tb)
library(ggplot2)
# where object df is your original dataset
ggplot(tb, mapping = aes(x = paises, y = driver_1)) +
geom_line(aes(linetype = as.factor(paises)))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = paises, y = -driver_1)) +
geom_line(aes(linetype = as.factor(paises), color = paises))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = paises, y = -driver_1)) +
geom_line(aes(color = paises))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = -driver_1)) +
geom_line(aes(color = paises))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = paises, y = -driver_1)) +
geom_line(aes(color = paises))
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb <- separate(data = tb, col = paises, into = c("paises", "ano"), sep = '-', remove = FALSE,
extra = "merge")
ggplot(tb, mapping = aes(x = ano, y = -driver_1)) +
geom_line(aes(color = paises))
ggplot(tb, mapping = aes(x = ano, y = -driver_1, group = 1)) +
geom_line(aes(color = paises))
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb <- separate(data = tb, col = paises, into = c("paises", "ano"), sep = '-', remove = FALSE,
extra = "merge")
library(ggplot2)
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = valuesound)) +
geom_line(aes(linetype = as.factor(paises)))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = driver_1)) +
geom_line(aes(linetype = as.factor(paises)))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = driver_1, group = 1)) +
geom_line(aes(linetype = as.factor(paises)))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = driver_1) +
geom_line(aes(linetype = as.factor(paises), group = 1)))
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb <- separate(data = tb, col = paises, into = c("paises", "ano"), sep = '-', remove = FALSE,
extra = "merge")
library(ggplot2)
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = driver_1)) +
geom_line(aes(linetype = as.factor(paises)))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = driver_1, group = 1)) +
geom_line(aes(linetype = as.factor(paises)))
# where object df is your original dataset
ggplot(tb, mapping = aes(x = ano, y = driver_1)) +
geom_line(aes(linetype = as.factor(paises), group = 1))
rm(list=ls())
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
data <- read_excel("~/Insper/Data/Projeto Macro/planoA - Copy.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
View(Phi)
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
Z <- pca$x[, 1:3]
colnames(Z) <- sprintf("driver_%d", 1:3)
get_driver <- function(Phi, drv, top) {
tibble(variavel = rownames(Phi), carga = Phi[, drv]) %>%
mutate(contribuicao = carga^2 / sum(carga^2)) %>%
arrange(desc(contribuicao)) %>%
head(n = top)
}
driver_1 <- get_driver(Phi, drv = 1, top = 6) # Governance
driver_2 <- get_driver(Phi, drv = 2, top = 6) # Social
driver_3 <- get_driver(Phi, drv = 3, top = 6) # Environmental
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
View(tb)
tb %>%
group_by(paises) %>%
summarise_all(mean) %>%
gather(key = "driver", value = "escore_medio", driver_1:driver_3) %>%
ggplot(aes(x = driver, y = -escore_medio,
group = paises, color = paises,
label = ifelse(driver == "driver_1", paises, ""))) +
geom_line(size = 1, alpha = 0.55) +
geom_point(size = 2) +
labs(x = "", y = "Escore MÃ©dio", title = "Indice") +
geom_label_repel(direction = "both") +
scale_x_discrete(breaks = sprintf("driver_%d", 1:3),
labels = c("G",
"S",
"E")) +
theme(legend.position = "none")
tb <- tb[seq = 16, ]
View(tb)
tb <- tb[c(1, 624, 16), ]
View(tb)
tb <- tb[c(6: 624, 16), ]
View(tb)
tb <- tb[c(16, 624, 16), ]
View(tb)
tb <- separate(data = tb, col = paises, into = c("paises", "ano"), sep = '-', remove = FALSE,
extra = "merge")
tb <- tb[c(16: 624, 16), ]
View(tb)
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb <- tb[c(16: 624, 16), ]
View(tb)
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb <- tb[c(16, 624, 16), ]
View(tb)
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb <- tb[16:624:16, ]
View(tb)
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb_ <- tb[16:624:1, ]
View(tb_)
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
tb_ <- tb[16:624::1, ]
tb_ <- tb[16,624::1, ]
ggplot(data = tb, aes(x = seq(16), y = driver_1))
ggplot(data = tb, aes(x = seq(16), y = driver_1, group = 1))
rm(list=ls())
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
# Extraindo os dados
data <- read_excel("~/Insper/Data/Projeto Macro/planoA - Copy.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
rm(list=ls())
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
# Extraindo os dados
data <- read_excel("~/Insper/Data/Projeto Macro/planoA - Copy.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
View(panel_data)
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
View(Phi)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
rm(list=ls())
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
data <- read_excel("~/Insper/Data/Projeto Macro/planoA - Copy.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
data <- read_excel("~/Insper/Data/Projeto Macro/planoB.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
# Extraindo os dados
data <- read_excel("~/Insper/Data/Projeto Macro/planoA - Copy.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
library(tidyr)
# Extraindo os dados
data <- read_excel("~/Insper/Data/Projeto Macro/planoB.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
pca <- -panel_data %>%
prcomp(scale = TRUE)
# Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("ProporÃ§Ã£o explicada da variÃ¢ncia")
Phi <- pca$rotation
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
View(Phi)
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
setwd("/Insper/Data/Projeto Macro/")
setwd("/Insper/Data/Projeto Macro/")
setwd("C:/Insper/Data/Projeto Macro/")
setwd("~/Insper/Data/Projeto Macro/")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
data <- read_excel("ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- panel_data[,-c(1,2)]
setwd("~/Insper/Data/Projeto Macro/")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
# Extraindo e arrumando os dados
data <- read_excel("ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
View(Phi)
Phi <- pca$rotation
setwd("~/Insper/Data/Projeto Macro/")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
# Extraindo e arrumando os dados
data <- read_excel("ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
## Ajustando escala dos dados
## Inverter o sinal para interpretabilidade
pca <- -panel_data %>%
prcomp(scale = TRUE)
## Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("Proporção Explicada da Variância")
## Cargas
Phi <- pca$rotation
View(Phi)
setwd("~/Insper/Data/Projeto Macro/")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
# Extraindo e arrumando os dados
data <- read_excel("ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
## Ajustando escala dos dados
## Inverter o sinal para interpretabilidade
pca <- -panel_data %>%
prcomp(scale = TRUE)
## Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("Proporção Explicada da Variância")
## Cargas
Phi <- pca$rotation
# View(Phi)
## Contribuições para as PCs
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
View(Phi)
setwd("~/Insper/Data/Projeto Macro/")
rm(list=ls())
library(readxl)
library(tidyverse)
library(factoextra)
library(ggrepel)
library(plm)
library(dplyr)
# Extraindo e arrumando os dados
data <- read_excel("ESG_database.xlsx")
data <- data[,-c(2)]
panel_data <- pdata.frame(data, index = c("Country.Name", "Time"))
panel_data <- panel_data[,-c(1,2)]
# PCA
## Ajustando escala dos dados
## Inverter o sinal para interpretabilidade
pca <- -panel_data %>%
prcomp(scale = TRUE)
## Scree plot
fviz_eig(pca, addlabels = TRUE) +  # scree plot
xlab("Componente Principal") +
ylab("Proporção Explicada da Variância")
## Cargas
Phi <- pca$rotation
# View(Phi)
## Contribuições para as PCs
pca %>% fviz_contrib(choice = "var", axes = 1, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC1") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 2, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC2") +
coord_flip()
pca %>% fviz_contrib(choice = "var", axes = 3, sort.val = "asc", fill = "steelblue", color = "black") +
labs(x = "", title = "Contribuiçõess das variáveis para a PC3") +
coord_flip()
Z <- pca$x[, 1:3]
View(Z)
Z <- pca$x[, 1:3]
colnames(Z) <- sprintf("driver_%d", 1:3)
get_driver <- function(Phi, drv, top) {
tibble(variavel = rownames(Phi), carga = Phi[, drv]) %>%
mutate(contribuicao = carga^2 / sum(carga^2)) %>%
arrange(desc(contribuicao)) %>%
head(n = top)
}
driver_1 <- get_driver(Phi, drv = 1, top = 6) # Governance
driver_2 <- get_driver(Phi, drv = 2, top = 6) # Social
driver_3 <- get_driver(Phi, drv = 3, top = 6) # Environmental
tb <- tibble(paises = rownames(panel_data)) %>%
bind_cols(as_tibble(Z))
View(tb)
rm(list=ls())
setwd("~/Insper/Data/Projeto Macro/Data_Macro_ESG/Macro_2021.2")
library(tidyverse)
library(plm)
library(stargazer)
library(lmtest)
rm(list=ls())
#dados
dataset_total <- read.csv("Bases/datasets/dataset_total.csv")
panel_dataset <- pdata.frame(dataset_total, index = c("country", "year"))
panel_dataset <- panel_dataset %>%
mutate(for_part = (foreign_debt/total_debt), for_ex_BC = ((nonbank_foreign_debt + bank_foreign_debt)/total_debt), for_nonbank_prop = (nonbank_foreign_debt/total_debt), develop = as.character(develop))
#panel dataset_AM
panel_dataset_AM <- panel_dataset %>%
filter(develop == "AM",
country != "United States")  # Tirei os EUA!!!!
#panel dataset_EM
panel_dataset_EM <- panel_dataset %>%
filter(develop == "EM")
ft1 <- for_ex_BC ~ debt_to_GDP*develop + ln_GDP_per_cap_cte + nominal_rate + fx_volatility + lending_borroeing_rate + vix_EUA
